{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'apple,orange,banana,grape,mango,kiwi,pear,watermelon'\n  };\n  useEffect(() => {\n    // Convert the description string to an array\n    const itemList = listData.description.split(',');\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray(itemList);\n    setList(shuffledList);\n  }, []);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.description) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: userOrder[index] || '',\n        onChange: e => handleInputChange(index, e.target.value),\n        placeholder: \"1-8\",\n        min: \"1\",\n        max: \"8\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLmav5qK4mrblli2HYHRGuvbN4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","list","setList","userOrder","setUserOrder","attempts","setAttempts","message","setMessage","gameOver","setGameOver","listData","title","description","itemList","split","shuffledList","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","handleInputChange","index","value","newUserOrder","handleSubmit","join","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","type","onChange","e","target","placeholder","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'apple,orange,banana,grape,mango,kiwi,pear,watermelon',\n  };\n\n  useEffect(() => {\n    // Convert the description string to an array\n    const itemList = listData.description.split(',');\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray(itemList);\n    setList(shuffledList);\n  }, []);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.description) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>{listData.title}</h1>\n      <p>{message}</p>\n      {!gameOver && (\n        <div>\n          {list.map((item, index) => (\n            <input\n              key={index}\n              type=\"number\"\n              value={userOrder[index] || ''}\n              onChange={(e) => handleInputChange(index, e.target.value)}\n              placeholder=\"1-8\"\n              min=\"1\"\n              max=\"8\"\n            />\n          ))}\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}