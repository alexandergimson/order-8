{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [availableNumbers, setAvailableNumbers] = useState([1, 2, 3, 4, 5, 6, 7, 8]);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon']\n  };\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items.length]);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n  const handleNumberSelect = (index, selectedNumber) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = selectedNumber;\n    setUserOrder(newUserOrder);\n\n    // Remove the selected number from the availableNumbers\n    setAvailableNumbers(prevNumbers => prevNumbers.filter(num => num !== selectedNumber));\n  };\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n        setAvailableNumbers([1, 2, 3, 4, 5, 6, 7, 8]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item, /*#__PURE__*/_jsxDEV(\"select\", {\n              value: userOrder[index] || '',\n              onChange: e => handleNumberSelect(index, parseInt(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), availableNumbers.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: num,\n                children: num\n              }, num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y4R7EbiyIfVkiA9X6vbgW2ius8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","list","setList","userOrder","setUserOrder","attempts","setAttempts","message","setMessage","gameOver","setGameOver","availableNumbers","setAvailableNumbers","listData","title","description","items","shuffledList","shuffleArray","length","array","shuffledArray","i","j","Math","floor","random","handleInputChange","index","value","newUserOrder","handleNumberSelect","selectedNumber","prevNumbers","filter","num","handleSubmit","join","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onChange","e","parseInt","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [availableNumbers, setAvailableNumbers] = useState([1, 2, 3, 4, 5, 6, 7, 8]);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon'],\n  };\n\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items.length]);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n\n  const handleNumberSelect = (index, selectedNumber) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = selectedNumber;\n    setUserOrder(newUserOrder);\n\n    // Remove the selected number from the availableNumbers\n    setAvailableNumbers((prevNumbers) => prevNumbers.filter((num) => num !== selectedNumber));\n  };\n\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n        setAvailableNumbers([1, 2, 3, 4, 5, 6, 7, 8]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>{listData.title}</h1>\n      <p>{listData.description}</p>\n      <p>{message}</p>\n      {!gameOver && (\n        <div>\n          <ul>\n            {list.map((item, index) => (\n              <li key={index}>\n                <div>\n                  {item}\n                  <select\n                    value={userOrder[index] || ''}\n                    onChange={(e) => handleNumberSelect(index, parseInt(e.target.value))}\n                  >\n                    <option value=\"\" disabled>\n                      Select Number\n                    </option>\n                    {availableNumbers.map((num) => (\n                      <option key={num} value={num}>\n                        {num}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}