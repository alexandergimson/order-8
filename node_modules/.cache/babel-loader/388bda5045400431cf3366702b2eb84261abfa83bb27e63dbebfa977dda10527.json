{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import a CSS file for styling (create a file named App.css)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon']\n  };\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n\n    // Assign initial numbers 1 to 8 to userOrder\n    setUserOrder([...Array(listData.items.length)].map((_, i) => i + 1));\n  }, [listData.items.length]);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleInputChange = (index, value) => {\n    // Update the selected number in the userOrder array\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n\n    // Move the selected item to the correct position in the list\n    const reorderedList = [...list];\n    const selectedItem = reorderedList.splice(index, 1)[0];\n    reorderedList.splice(value - 1, 0, selectedItem);\n\n    // Update the userOrder array to match the new order\n    setUserOrder([...Array(list.length)].map((_, i) => i + 1));\n    setList(reorderedList);\n  };\n  const handleSubmit = () => {\n    const isCorrectOrder = userOrder.length === listData.items.length && userOrder.every((order, index) => order === index + 1);\n    if (isCorrectOrder) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: listData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: listData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userOrder[index] || '',\n            onChange: e => handleInputChange(index, parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), [1, 2, 3, 4, 5, 6, 7, 8].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLmav5qK4mrblli2HYHRGuvbN4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","list","setList","userOrder","setUserOrder","attempts","setAttempts","message","setMessage","gameOver","setGameOver","listData","title","description","items","shuffledList","shuffleArray","Array","length","map","_","i","array","shuffledArray","j","Math","floor","random","handleInputChange","index","value","newUserOrder","reorderedList","selectedItem","splice","handleSubmit","isCorrectOrder","every","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","onChange","e","parseInt","target","disabled","num","onClick","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Import a CSS file for styling (create a file named App.css)\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon'],\n  };\n\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n\n    // Assign initial numbers 1 to 8 to userOrder\n    setUserOrder([...Array(listData.items.length)].map((_, i) => i + 1));\n  }, [listData.items.length]);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleInputChange = (index, value) => {\n    // Update the selected number in the userOrder array\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n\n    // Move the selected item to the correct position in the list\n    const reorderedList = [...list];\n    const selectedItem = reorderedList.splice(index, 1)[0];\n    reorderedList.splice(value - 1, 0, selectedItem);\n\n    // Update the userOrder array to match the new order\n    setUserOrder([...Array(list.length)].map((_, i) => i + 1));\n\n    setList(reorderedList);\n  };\n\n  const handleSubmit = () => {\n    const isCorrectOrder =\n      userOrder.length === listData.items.length &&\n      userOrder.every((order, index) => order === index + 1);\n  \n    if (isCorrectOrder) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n      }\n    }\n  };\n  \n\n  return (\n    <div className=\"tile-container\">\n      <div className=\"tile\">\n        <h1>{listData.title}</h1>\n        <p>{listData.description}</p>\n      </div>\n      {!gameOver && (\n        <>\n          {list.map((item, index) => (\n            <div key={index} className=\"tile\">\n              <div className=\"item-container\">\n                <div className=\"item-name\">{item}</div>\n                <select\n                  value={userOrder[index] || ''}\n                  onChange={(e) => handleInputChange(index, parseInt(e.target.value))}\n                >\n                  <option value=\"\" disabled>\n                    Select Number\n                  </option>\n                  {[1, 2, 3, 4, 5, 6, 7, 8].map((num) => (\n                    <option key={num} value={num}>\n                      {num}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          ))}\n          <button onClick={handleSubmit}>Submit</button>\n        </>\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}