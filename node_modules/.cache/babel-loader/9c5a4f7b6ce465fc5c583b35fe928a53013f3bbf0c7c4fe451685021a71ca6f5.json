{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import a CSS file for styling (create a file named App.css)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon']\n  };\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items.length]);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleInputChange = (index, value) => {\n    // Update the selected number in the userOrder array\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n\n    // Move the selected item to the correct position in the list\n    const reorderedList = [...list];\n    const selectedItem = reorderedList.splice(index, 1)[0];\n    reorderedList.splice(value - 1, 0, selectedItem);\n    setList(reorderedList);\n    setUserOrder(newUserOrder);\n  };\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.map((_, i) => i + 1).join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        // Do not reset the userOrder array\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile-container\",\n      children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: userOrder[index] || '',\n          onChange: e => handleInputChange(index, parseInt(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), [1, 2, 3, 4, 5, 6, 7, 8].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLmav5qK4mrblli2HYHRGuvbN4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","list","setList","userOrder","setUserOrder","attempts","setAttempts","message","setMessage","gameOver","setGameOver","listData","title","description","items","shuffledList","shuffleArray","length","array","shuffledArray","i","j","Math","floor","random","handleInputChange","index","value","newUserOrder","reorderedList","selectedItem","splice","handleSubmit","join","map","_","children","fileName","_jsxFileName","lineNumber","columnNumber","className","item","onChange","e","parseInt","target","disabled","num","onClick","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Import a CSS file for styling (create a file named App.css)\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon'],\n  };\n\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items.length]);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleInputChange = (index, value) => {\n    // Update the selected number in the userOrder array\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n  \n    // Move the selected item to the correct position in the list\n    const reorderedList = [...list];\n    const selectedItem = reorderedList.splice(index, 1)[0];\n    reorderedList.splice(value - 1, 0, selectedItem);\n  \n    setList(reorderedList);\n    setUserOrder(newUserOrder);\n  };\n  \n\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.map((_, i) => i + 1).join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        // Do not reset the userOrder array\n      }\n    }\n  };\n  \n  \n  return (\n    <div>\n      <h1>{listData.title}</h1>\n      <p>{listData.description}</p>\n      <p>{message}</p>\n      {!gameOver && (\n        <div className=\"tile-container\">\n          {list.map((item, index) => (\n            <div key={index} className=\"tile\">\n              <div>{item}</div>\n              <select\n                value={userOrder[index] || ''}\n                onChange={(e) => handleInputChange(index, parseInt(e.target.value))}\n              >\n                <option value=\"\" disabled>\n                  Select Number\n                </option>\n                {[1, 2, 3, 4, 5, 6, 7, 8].map((num) => (\n                  <option key={num} value={num}>\n                    {num}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ))}\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}