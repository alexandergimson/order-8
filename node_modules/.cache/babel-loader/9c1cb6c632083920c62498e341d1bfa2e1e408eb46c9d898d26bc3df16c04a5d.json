{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // You can create a corresponding App.css file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tiles, setTiles] = useState([{\n    id: 1,\n    text: 'Tile 1'\n  }, {\n    id: 2,\n    text: 'Tile 2'\n  }, {\n    id: 3,\n    text: 'Tile 3'\n  }\n  // Add more tiles as needed\n  ]);\n\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, index) => {\n    e.preventDefault();\n    const draggedId = e.dataTransfer.getData('text/plain');\n    const draggedTile = tiles.find(tile => tile.id.toString() === draggedId);\n    const updatedTiles = [...tiles];\n    updatedTiles.splice(index, 0, draggedTile);\n    setTiles(updatedTiles);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your App Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tiles.map((tile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, tile.id),\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleDrop(e, index),\n        style: {\n          padding: '8px',\n          border: '1px solid #ccc',\n          margin: '4px',\n          cursor: 'move'\n        },\n        children: tile.text\n      }, tile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"B7Rx8vtk74gx6KTWrd4TS63O4mY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tiles","setTiles","id","text","handleDragStart","e","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","index","draggedId","getData","draggedTile","find","tile","toString","updatedTiles","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","draggable","onDragStart","onDragOver","onDrop","style","padding","border","margin","cursor","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // You can create a corresponding App.css file for styling\n\nconst App = () => {\n  const [tiles, setTiles] = useState([\n    { id: 1, text: 'Tile 1' },\n    { id: 2, text: 'Tile 2' },\n    { id: 3, text: 'Tile 3' },\n    // Add more tiles as needed\n  ]);\n\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e, index) => {\n    e.preventDefault();\n    const draggedId = e.dataTransfer.getData('text/plain');\n    const draggedTile = tiles.find((tile) => tile.id.toString() === draggedId);\n    const updatedTiles = [...tiles];\n    updatedTiles.splice(index, 0, draggedTile);\n    setTiles(updatedTiles);\n  };\n\n  return (\n    <div>\n      <h1>Your App Title</h1>\n      <div>\n        {tiles.map((tile, index) => (\n          <div\n            key={tile.id}\n            draggable\n            onDragStart={(e) => handleDragStart(e, tile.id)}\n            onDragOver={(e) => handleDragOver(e)}\n            onDrop={(e) => handleDrop(e, index)}\n            style={{\n              padding: '8px',\n              border: '1px solid #ccc',\n              margin: '4px',\n              cursor: 'move',\n            }}\n          >\n            {tile.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS;EACxB;EAAA,CACD,CAAC;;EAEF,MAAMC,eAAe,GAAGA,CAACC,CAAC,EAAEH,EAAE,KAAK;IACjCG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,EAAE,CAAC;EAC1C,CAAC;EAED,MAAMM,cAAc,GAAIH,CAAC,IAAK;IAC5BA,CAAC,CAACI,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACL,CAAC,EAAEM,KAAK,KAAK;IAC/BN,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMG,SAAS,GAAGP,CAAC,CAACC,YAAY,CAACO,OAAO,CAAC,YAAY,CAAC;IACtD,MAAMC,WAAW,GAAGd,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACd,EAAE,CAACe,QAAQ,CAAC,CAAC,KAAKL,SAAS,CAAC;IAC1E,MAAMM,YAAY,GAAG,CAAC,GAAGlB,KAAK,CAAC;IAC/BkB,YAAY,CAACC,MAAM,CAACR,KAAK,EAAE,CAAC,EAAEG,WAAW,CAAC;IAC1Cb,QAAQ,CAACiB,YAAY,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA;MAAAuB,QAAA,EACGpB,KAAK,CAACyB,GAAG,CAAC,CAACT,IAAI,EAAEL,KAAK,kBACrBd,OAAA;QAEE6B,SAAS;QACTC,WAAW,EAAGtB,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEW,IAAI,CAACd,EAAE,CAAE;QAChD0B,UAAU,EAAGvB,CAAC,IAAKG,cAAc,CAACH,CAAC,CAAE;QACrCwB,MAAM,EAAGxB,CAAC,IAAKK,UAAU,CAACL,CAAC,EAAEM,KAAK,CAAE;QACpCmB,KAAK,EAAE;UACLC,OAAO,EAAE,KAAK;UACdC,MAAM,EAAE,gBAAgB;UACxBC,MAAM,EAAE,KAAK;UACbC,MAAM,EAAE;QACV,CAAE;QAAAd,QAAA,EAEDJ,IAAI,CAACb;MAAI,GAZLa,IAAI,CAACd,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjDID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}