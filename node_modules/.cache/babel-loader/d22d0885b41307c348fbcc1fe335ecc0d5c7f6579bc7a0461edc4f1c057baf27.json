{"ast":null,"code":"var _jsxFileName = \"/Users/alexgimson/Documents/GitHub/order-8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon']\n  };\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items]);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: userOrder[index] || '',\n            onChange: e => handleInputChange(index, e.target.value),\n            placeholder: \"1-8\",\n            min: \"1\",\n            max: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLmav5qK4mrblli2HYHRGuvbN4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","list","setList","userOrder","setUserOrder","attempts","setAttempts","message","setMessage","gameOver","setGameOver","listData","title","description","items","shuffledList","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","handleInputChange","index","value","newUserOrder","handleSubmit","join","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","type","onChange","e","target","placeholder","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/alexgimson/Documents/GitHub/order-8/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [attempts, setAttempts] = useState(3);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  // Sample data in the database\n  const listData = {\n    title: 'Fruits',\n    description: 'Arrange these fruits in alphabetical order',\n    items: ['apple', 'banana', 'grape', 'kiwi', 'mango', 'orange', 'pear', 'watermelon'],\n  };\n\n  useEffect(() => {\n    // Shuffle the array for a random order\n    const shuffledList = shuffleArray([...listData.items]);\n    setList(shuffledList);\n  }, [listData.items]);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleInputChange = (index, value) => {\n    const newUserOrder = [...userOrder];\n    newUserOrder[index] = value;\n    setUserOrder(newUserOrder);\n  };\n\n  const handleSubmit = () => {\n    if (userOrder.join(',') === listData.items.join(',')) {\n      setMessage('Congratulations! You got the order right.');\n      setGameOver(true);\n    } else {\n      setAttempts(attempts - 1);\n      if (attempts === 0) {\n        setMessage('Game over. Better luck next time!');\n        setGameOver(true);\n      } else {\n        setMessage(`Incorrect order. ${attempts} attempts remaining.`);\n        setUserOrder([]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>{listData.title}</h1>\n      <p>{listData.description}</p>\n      <p>{message}</p>\n      {!gameOver && (\n        <div>\n          <ul>\n            {list.map((item, index) => (\n              <li key={index}>\n                {item}\n                <input\n                  type=\"number\"\n                  value={userOrder[index] || ''}\n                  onChange={(e) => handleInputChange(index, e.target.value)}\n                  placeholder=\"1-8\"\n                  min=\"1\"\n                  max=\"8\"\n                />\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMgB,QAAQ,GAAG;IACfC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,4CAA4C;IACzDC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY;EACrF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,YAAY,GAAGC,YAAY,CAAC,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAAC,CAAC;IACtDZ,OAAO,CAACa,YAAY,CAAC;EACvB,CAAC,EAAE,CAACJ,QAAQ,CAACG,KAAK,CAAC,CAAC;EAEpB,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,aAAa,GAAG,CAAC,GAAGD,KAAK,CAAC;IAChC,KAAK,IAAIE,CAAC,GAAGD,aAAa,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACjD,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,aAAa,CAACC,CAAC,CAAC,EAAED,aAAa,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,aAAa,CAACG,CAAC,CAAC,EAAEH,aAAa,CAACC,CAAC,CAAC,CAAC;IAC7E;IACA,OAAOD,aAAa;EACtB,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,YAAY,GAAG,CAAC,GAAGzB,SAAS,CAAC;IACnCyB,YAAY,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC3BvB,YAAY,CAACwB,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI1B,SAAS,CAAC2B,IAAI,CAAC,GAAG,CAAC,KAAKnB,QAAQ,CAACG,KAAK,CAACgB,IAAI,CAAC,GAAG,CAAC,EAAE;MACpDtB,UAAU,CAAC,2CAA2C,CAAC;MACvDE,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLJ,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;MACzB,IAAIA,QAAQ,KAAK,CAAC,EAAE;QAClBG,UAAU,CAAC,mCAAmC,CAAC;QAC/CE,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLF,UAAU,CAAE,oBAAmBH,QAAS,sBAAqB,CAAC;QAC9DD,YAAY,CAAC,EAAE,CAAC;MAClB;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAKpB,QAAQ,CAACC;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBrC,OAAA;MAAAiC,QAAA,EAAIpB,QAAQ,CAACE;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrC,OAAA;MAAAiC,QAAA,EAAIxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACf,CAAC1B,QAAQ,iBACRX,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EACG9B,IAAI,CAACmC,GAAG,CAAC,CAACC,IAAI,EAAEX,KAAK,kBACpB5B,OAAA;UAAAiC,QAAA,GACGM,IAAI,eACLvC,OAAA;YACEwC,IAAI,EAAC,QAAQ;YACbX,KAAK,EAAExB,SAAS,CAACuB,KAAK,CAAC,IAAI,EAAG;YAC9Ba,QAAQ,EAAGC,CAAC,IAAKf,iBAAiB,CAACC,KAAK,EAAEc,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;YAC1De,WAAW,EAAC,KAAK;YACjBC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC;UAAG;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GATKT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLrC,OAAA;QAAQ+C,OAAO,EAAEhB,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9EID,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAgFT,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}